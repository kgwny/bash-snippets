${FOO}			    # FOOの値
${FOO:-word}	    # FOOが設定済であればその値、さもなくばword(FOOは未設定のまま)
${FOO:=word}	    # FOOが設定済であればその値、さもなくばword(FOOにもwordを設定)
${FOO-word}		    # FOOが定義済であればその値、さもなくばword(FOOは未設定のまま)
${FOO=word}		    # FOOが定義済であればその値、さもなくばword(FOOにもwordを設定)
${FOO:?word}	    # FOOが未設定であればwordを標準出力に出力してシェル終了
${FOO:+word}	    # FOOが設定済であればword、未設定時は空文字
${FOO:n}		    # FOOのn文字目(0始まり)以降の文字列
${FOO:n:m}		    # FOOのn文字目(0始まり)からm文字分の文字列
${FOO#word}		    # FOOの先頭からwordにマッチする部分を除外(最短マッチ)(*も使用可)
${FOO##word}	    # FOOの先頭からwordにマッチする部分を除外(最大マッチ)(*も使用可)
${FOO%word}		    # FOOの末尾からwordにマッチする部分を除外(最短マッチ)(*も使用可)
${FOO%%word}	    # FOOの末尾からwordにマッチする部分を除外(最大マッチ)(*も使用可)
${!FOO*}		    # FOOではじまる変数名の一覧
${!FOO@}		    # 同上
${#FOO}			    # FOOの文字数。未設定時は0
${FOO/ptn/word}	    # パターンptnへのマッチ部分をwordに置換(部分マッチ,1回のみ)(*も使用可)
${FOO//ptn/word}    # パターンptnへのマッチ部分をwordに置換(部分マッチ,すべて)(*も使用可)
${FOO/#ptn/word}	# パターンptnへのマッチ部分をwordに置換(先頭マッチ)(*も使用可)
${FOO/%ptn/word}	# パターンptnへのマッチ部分をwordに置換(末尾マッチ)(*も使用可)
${FOO^}			    # 最初の1文字を大文字化
${FOO^^}		    # すべての文字を大文字化
${FOO,}			    # 最初の1文字を小文字化
${FOO,,}		    # すべての文字を小文字化
${FOO~}	    		# 最初の1文字を大文字・小文字反転
${FOO~~}		    # すべての文字を大文字・小文字反転(何に使うんだろ...)
${FOO^[pattern]}	# patternいずれかの文字と合致時のみ大小文字変換(^^ , ~等でも可)
${!FOO[*]}	    	# 連想配列FOO[key]のキー一覧(連想配列はdeclare -A宣言が必要)
${!FOO[@]}	    	# 同上
${FOO[*]}	    	# 連想配列FOO[key]の値一覧(連想配列はdeclare -A宣言が必要)
${FOO[@]}	    	# 同上
${#FOO[*]}	    	# 連想配列FOO[key]の個数(連想配列はdeclare -A宣言が必要)
${#FOO[@]}	    	# 同上
